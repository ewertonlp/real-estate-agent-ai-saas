"""create all tables

Revision ID: 8c91679e18dd
Revises: 
Create Date: 2025-06-22 10:45:13.096921

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c91679e18dd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prompt_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('template_text', sa.Text(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('prompt_templates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_prompt_templates_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_prompt_templates_name'), ['name'], unique=True)

    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price_id_stripe', sa.String(), nullable=True),
    sa.Column('unit_amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('interval', sa.String(), nullable=False),
    sa.Column('interval_count', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('max_generations', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('price_id_stripe')
    )
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subscription_plans_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_subscription_plans_name'), ['name'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('subscription_plan_id', sa.Integer(), nullable=True),
    sa.Column('content_generations_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)

    op.create_table('generated_contents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('prompt_used', sa.Text(), nullable=False),
    sa.Column('generated_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('is_favorite', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('generated_contents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_generated_contents_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('generated_contents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_generated_contents_id'))

    op.drop_table('generated_contents')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('subscription_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscription_plans_name'))
        batch_op.drop_index(batch_op.f('ix_subscription_plans_id'))

    op.drop_table('subscription_plans')
    with op.batch_alter_table('prompt_templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_prompt_templates_name'))
        batch_op.drop_index(batch_op.f('ix_prompt_templates_id'))

    op.drop_table('prompt_templates')
    # ### end Alembic commands ###
